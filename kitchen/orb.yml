---
version: 2.1

executors:
  chefdk:
    docker: [image: "chef/chefworkstation:current"]
  ruby:
    docker: [image: "circleci/ruby"]
  python:
    docker: [image: "circleci/python"]
  chef:
    machine:
      image: "ubuntu-1604:201903-01"
  terraform:
    docker: [image: "hashicorp/terraform"]

commands:
  install_chef:
    description: Installs Chef Development Kit
    parameters:
      channel:
        description: ChefDK channel stable or current
        type: string
        default: current
    steps:
      - run:
          name: Install Chef
          command: |
            curl -L https://omnitruck.chef.io/install.sh |
              sudo bash -s -- -c <<parameters.channel>> -P chefdk

jobs:
  danger:
    executor: ruby
    steps:
      - checkout
      - run:
          name: Install Danger
          command: gem install danger
      - run:
          name: Run Danger
          command: danger
  delivery:
    executor: chefdk
    steps:
      - checkout
      - run:
          name: Run delivery
          command: delivery local all

  dokken:
    executor: chef
    parameters:
      suite:
        description: Test Kitchen suite name
        type: string
      channel:
        description: ChefDK channel stable or current
        type: string
        default: current
      timeout:
        description: Set the command timeout
        type: string
        default: 1h
    environment:
      KITCHEN_LOCAL_YAML: kitchen.dokken.yml
      CHEF_LICENSE: "accept-no-persist"
    steps:
      - checkout
      - install_chef:
          channel: <<parameters.channel>>
      - run:
          name: amazonlinux
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-amazonlinux
      - run:
          name: amazonlinux-2
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-amazonlinux-2
      - run:
          name: centos-6
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-centos-6
      - run:
          name: centos-7
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-centos-7
      - run:
          name: debian-8
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-debian-8
      - run:
          name: debian-9
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-debian-9
      - run:
          name: ubuntu-16.04
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-ubuntu-1604
      - run:
          name: ubuntu-18.04
          no_output_timeout: <<parameters.timeout>>
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>-ubuntu-1804
      - store_artifacts:
          path: .kitchen/logs
          when: always

  dokken-single:
    executor: chef
    parameters:
      suite:
        description: Test Kitchen suite name
        type: string
      channel:
        description: ChefDK channel stable or current
        type: string
        default: current
      enable-ipv6:
        description: Optionally enable an IPv6 stack for testing
        type: boolean
        default: false
    environment:
      KITCHEN_LOCAL_YAML: kitchen.dokken.yml
      CHEF_LICENSE: "accept-no-persist"
    steps:
      - checkout
      - install_chef:
          channel: <<parameters.channel>>
      - when:
          condition: << parameters.enable-ipv6 >>
          steps:
            - run: |
                docker network create --driver=bridge
                --subnet=172.18.0.0/16 --gateway=172.18.0.1
                --subnet=2001:db8:1::/64 --ipv6 dokken
            - run: docker network inspect dokken
      - run:
          command: CHEF_LICENSE="accept-no-persist" kitchen test <<parameters.suite>>
      - store_artifacts:
          path: .kitchen/logs
          when: on_fail
  mdlint:
    executor: ruby
    steps:
      - checkout
      - run:
          name: Install Markdown Linter
          command: gem install mdl
      - run:
          name: Run Markdown Linter
          command: mdl ./

  yamllint:
    executor: python
    steps:
      - checkout
      - run:
          name: Install YamlLint
          command: pip install --user yamllint
      - run:
          name: Run YamlLint
          command: |
            export PATH=/home/circleci/.local/bin:$PATH
            yamllint .

  lint_ruby:
    executor: ruby
    steps:
      - checkout
      - run:
          name: Lint Ruby
          command: |
            gem install rubocop --no-document
            rubocop

  lint_terraform:
    executor: terraform
    steps:
      - checkout
      - run:
          name: Lint Terraform
          command: terraform fmt -check -recursive

  validate_terraform:
    executor: terraform
    parameters:
      folder:
        description: Folder to validate
        type: string
        default: "."
      workspace:
        description: Terraform workspace name
        type: string
        default: "default"
    environment:
      TF_WORKSPACE: <<parameters.workspace>>
    steps:
      - checkout
      - run:
          name: Initialize Terraform
          command: terraform init -upgrade <<parameters.folder>>
      - run:
          name: Validate Terraform
          command: terraform validate <<parameters.folder>>
